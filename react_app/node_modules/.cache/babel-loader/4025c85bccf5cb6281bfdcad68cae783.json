{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\workspace\\\\webstrom-workspace\\\\react-2020\\\\react_app\\\\src\\\\components\\\\Search\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport default class Search extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.search = () => {\n      //获取用户的输入。下面使用(连续解构赋值+重命名)\n      const {\n        keyWordNode: {\n          value: keyWord\n        }\n      } = this; //先从this中解构出keyWordNode，再从keyWordNode中解构出value,再将value重命名为keyWord\n      // console.log(keyWordNode)  这里keyWordNode是未定义的。\n\n      console.log(keyWord); //发送请求前通知App更新状态\n\n      this.props.updateAppState({\n        isFirst: false,\n        isLoading: true\n      }); //发送网络请求\n      //github地址:   http://api.github.com/search/users?q=xxxxxx     这是一个get请求。\n\n      axios.get(`/search/users?q=${keyWord}`).then(response => {\n        this.props.updateAppState({\n          isLoading: false,\n          users: response.data.items\n        });\n        console.log('成功了', response.data); // this.props.saveUsers(response.data.items)\n      }, error => {\n        console.log('失败了', error);\n        this.props.updateAppState({\n          isLoading: false,\n          error: error.message\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22github\\u7528\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.keyWordNode = c,\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u5173\\u952E\\u8BCD\\u70B9\\u51FB\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/workspace/webstrom-workspace/react-2020/react_app/src/components/Search/index.jsx"],"names":["React","Component","axios","Search","search","keyWordNode","value","keyWord","console","log","props","updateAppState","isFirst","isLoading","get","then","response","users","data","items","error","message","render","c"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC5CG,MAD4C,GACnC,MAAI;AACX;AACA,YAAM;AAACC,QAAAA,WAAW,EAAC;AAACC,UAAAA,KAAK,EAACC;AAAP;AAAb,UAAgC,IAAtC,CAFW,CAEoC;AAC/C;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAJW,CAKX;;AACA,WAAKG,KAAL,CAAWC,cAAX,CAA0B;AAACC,QAAAA,OAAO,EAAC,KAAT;AAAeC,QAAAA,SAAS,EAAC;AAAzB,OAA1B,EANW,CAQX;AACA;;AACAX,MAAAA,KAAK,CAACY,GAAN,CAAW,mBAAkBP,OAAQ,EAArC,EACGQ,IADH,CAEIC,QAAQ,IAAE;AACR,aAAKN,KAAL,CAAWC,cAAX,CAA0B;AAACE,UAAAA,SAAS,EAAC,KAAX;AAAiBI,UAAAA,KAAK,EAACD,QAAQ,CAACE,IAAT,CAAcC;AAArC,SAA1B;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBO,QAAQ,CAACE,IAA3B,EAFQ,CAGR;AACD,OANL,EAOIE,KAAK,IAAE;AACLZ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBW,KAAlB;AACA,aAAKV,KAAL,CAAWC,cAAX,CAA0B;AAACE,UAAAA,SAAS,EAAC,KAAX;AAAiBO,UAAAA,KAAK,EAACA,KAAK,CAACC;AAA7B,SAA1B;AACD,OAVL;AAYD,KAvB2C;AAAA;;AAyB5CC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAO,UAAA,GAAG,EAAEC,CAAC,IAAI,KAAKlB,WAAL,GAAmBkB,CAApC;AAAuC,UAAA,IAAI,EAAC,MAA5C;AAAmD,UAAA,WAAW,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,gBADF,uBAEE;AAAQ,UAAA,OAAO,EAAE,KAAKnB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAnC2C","sourcesContent":["import React,{Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Search extends Component {\r\n  search = ()=>{\r\n    //获取用户的输入。下面使用(连续解构赋值+重命名)\r\n    const {keyWordNode:{value:keyWord}} = this     //先从this中解构出keyWordNode，再从keyWordNode中解构出value,再将value重命名为keyWord\r\n    // console.log(keyWordNode)  这里keyWordNode是未定义的。\r\n    console.log(keyWord)\r\n    //发送请求前通知App更新状态\r\n    this.props.updateAppState({isFirst:false,isLoading:true})\r\n\r\n    //发送网络请求\r\n    //github地址:   http://api.github.com/search/users?q=xxxxxx     这是一个get请求。\r\n    axios.get(`/search/users?q=${keyWord}`)\r\n      .then(\r\n        response=>{\r\n          this.props.updateAppState({isLoading:false,users:response.data.items})\r\n          console.log('成功了',response.data)\r\n          // this.props.saveUsers(response.data.items)\r\n        },\r\n        error=>{\r\n          console.log('失败了',error)\r\n          this.props.updateAppState({isLoading:false,error:error.message})\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"jumbotron\">\r\n        <h3 className=\"jumbotron-heading\">搜索github用户</h3>\r\n        <div>\r\n          <input ref={c => this.keyWordNode = c} type=\"text\" placeholder=\"输入关键词点击搜索\"/>&nbsp;\r\n          <button onClick={this.search}>搜索</button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}